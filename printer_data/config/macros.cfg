######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[pause_resume]

#[gcode_macro _M600]
#gcode:
#    {% set X = params.X|default(50)|float %}
#    {% set Y = params.Y|default(0)|float %}
#    {% set Z = params.Z|default(10)|float %}
#    SAVE_GCODE_STATE NAME=M600_state
#    PAUSE
#    G91
#    G1 E-.8 F2700
#    G1 Z{Z}
#    G90
#    G1 X{X} Y{Y} F3000
#    G91
#    G1 E-50 F1000
#    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro LOAD_FILAMENT]
variable_load_distance:  480
variable_purge_distance:  25
variable_nozzle_temp: 200
gcode:
    {% set speed = params.SPEED|default(1000) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=load_state
    M109 S{nozzle_temp}
    G91
    G92 E0
    G1 E{load_distance} F{speed} # fast-load
    #G1 E{purge_distance} F{speed} # purge
    RESTORE_GCODE_STATE NAME=load_state
    G92 E0
    #M104 S0

[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance:  500
variable_purge_distance:  25
variable_nozzle_temp: 200
gcode:
    {% set speed = params.SPEED|default(1000) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=unload_state
    M109 S{nozzle_temp}
    G91
    G92 E0
    #G1 E{purge_distance} F{speed} # purge
    G1 E-{unload_distance} F{speed} # fast-unload
    RESTORE_GCODE_STATE NAME=unload_state
    G92 E0
    M104 S0

[gcode_macro ALLOW_EXTRUDER]
gcode:
    M302 P1

[gcode_macro DISALLOW_EXTRUDER]
gcode:
    M302 P0

[gcode_macro Bed_Down]
gcode:
  {% set z_max = printer.toolhead.axis_maximum.z %}
  {% set z_pos = printer.toolhead.position.z %}
  G90
  G1 Z {z_max} F600

[gcode_macro Adjust_Bed_Screws]
gcode:
  G28
  BED_SCREWS_ADJUST

[gcode_macro SET_ACTIVE_SPOOL]
gcode:
  {% if params.ID %}
    {% set id = params.ID|int %}
    {action_call_remote_method(
       "spoolman_set_active_spool",
       spool_id=id
    )}
  {% else %}
    {action_respond_info("Parameter 'ID' is required")}
  {% endif %}

[gcode_macro CLEAR_ACTIVE_SPOOL]
gcode:
  {action_call_remote_method(
    "spoolman_set_active_spool",
    spool_id=None
  )}

[gcode_macro Heater_Fan]
description: Toggle heater fan
gcode: 
  {% if printer['pin heater_fan'].value == 0 %}
    M106
  {% else %} 
    M107 
  {% endif %}
  
[gcode_macro Fan_on]
gcode:
 M106
 [gcode_macro Fan_off]
gcode:
 M107
 


[gcode_macro RESPOND]
rename_existing: BASE_RESPOND
gcode:
  {% set colors = ('primary', 'secondary', 'accent', 'info', 'success', 'error', 'warning') %}

  {% if params.PREFIX is defined %}
    {% set prefix = 'PREFIX=' + params.PREFIX|string %}
  {% endif %}

  {% if params.TYPE is defined %}
      {% if params.TYPE in ('echo', 'echo_no_space', 'command', 'error') and params.TYPE != '' %}    
          {% set type = 'TYPE=' + params.TYPE|string %}
      {% else %}
          BASE_RESPOND TYPE=error MSG="RESPOND TYPE '{params.TYPE}' is invalid. Must be one of 'echo', 'command' or 'error'"
      {% endif %}
  {% endif %}
        
  {% if params.MSG is defined %}   
    {% set msg = 'MSG="'+ params.MSG + '"'|string %}
  {% endif %}

  {% if params.COLOR is defined %}
      {% set color = params.COLOR|lower %}

      {% if color in colors %}
          {% set msg = 'MSG="<span class=' + color + '--text>' + params.MSG + '</span>"'|string %}
  
      {% else %}
          BASE_RESPOND TYPE=error MSG="RESPOND COLOR '{color}' is invalid. Must be one of 'primary', 'secondary', 'accent', 'info', 'success', 'warning' or 'error'"
      {% endif %}
       
  {% endif %}
  BASE_RESPOND {prefix} {type} {msg}


    